{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9833919,"sourceType":"datasetVersion","datasetId":6031806}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","jupyter":{"source_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing import image\nimport numpy as np\nimport requests\nfrom io import BytesIO\nfrom PIL import Image\n# Load pre-trained MobileNetV2 model\nmodel = tf.keras.applications.MobileNetV2(weights='imagenet')\n# Function to process the image\ndef prepare_image(img_path):\n    # Load image\n    img = Image.open(img_path).resize((224, 224))  # Resize to the input size of the model\n    img_array = np.array(img)\n    \n    # Preprocess the image for MobileNetV2\n    img_array = tf.keras.applications.mobilenet_v2.preprocess_input(img_array)\n    \n    # Add batch dimension\n    img_array = np.expand_dims(img_array, axis=0)\n    \n    return img_array\n# Function to predict the label\ndef predict_animal(img_path):\n    img_array = prepare_image(img_path)\n    \n    # Predict the image class\n    predictions = model.predict(img_array)\n    \n    # Decode predictions\n    decoded_predictions = tf.keras.applications.mobilenet_v2.decode_predictions(predictions, top=1)[0][0]\n    \n    # Display the result\n    print(f\"Predicted animal: {decoded_predictions[1]} with probability: {decoded_predictions[2]*100:.2f}%\")\n# Example: Upload an image from a URL (you can replace this with a local file)\nimg_url = \"/kaggle/input/horse1/horse1.jpg\"  # Replace with your image URL or path\nresponse = predict_animal(img_url)","metadata":{"execution":{"iopub.status.busy":"2024-11-07T12:36:59.295343Z","iopub.execute_input":"2024-11-07T12:36:59.295921Z","iopub.status.idle":"2024-11-07T12:37:18.620822Z","shell.execute_reply.started":"2024-11-07T12:36:59.295853Z","shell.execute_reply":"2024-11-07T12:37:18.619545Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_1.0_224.h5\n\u001b[1m14536120/14536120\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2s/step\nDownloading data from https://storage.googleapis.com/download.tensorflow.org/data/imagenet_class_index.json\n\u001b[1m35363/35363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\nPredicted animal: sorrel with probability: 86.72%\n","output_type":"stream"}]}]}